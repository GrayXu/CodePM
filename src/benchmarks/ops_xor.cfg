[global]
group = ops_xor
repeats = 1

# [normal_xor_persist]
# bench = ops_bench
# file = pobjpool.set
# operation = normal_xor_persist
# threads = 1
# thread-affinity = true
# affinity-list = 2
# data-size = 64:*2:4096
# ops-per-thread = 200000

# [atomic_xor_persist]
# bench = ops_bench
# file = pobjpool.set
# operation = atomic_xor_persist
# threads = 1
# thread-affinity = true
# affinity-list = 2
# data-size = 64:*2:32768
# ops-per-thread = 200000

# [memcpy_persist]
# bench = ops_bench
# file = pobjpool.set
# operation = memcpy_persist
# threads = 1
# thread-affinity = true
# affinity-list = 2
# data-size = 64:*2:4096
# ops-per-thread = 200000

# [memcpy_persist_twice]
# bench = ops_bench
# file = pobjpool.set
# operation = memcpy_persist
# threads = 1
# thread-affinity = true
# affinity-list = 2
# data-size = 64:*2:4096
# ops-per-thread = 200000

[pangolin_atomic_xor]
bench = ops_bench
file = pobjpool.set
operation = pangolin_atomic_xor
threads = 1
thread-affinity = true
affinity-list = 2
data-size = 64:*2:32768
ops-per-thread = 200000

[pangolin_avx_xor]
bench = ops_bench
file = pobjpool.set
operation = pangolin_avx_xor
threads = 1
thread-affinity = true
affinity-list = 2
data-size = 64:*2:32768
ops-per-thread = 200000
